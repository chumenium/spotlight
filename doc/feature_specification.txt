SpotLight 機能仕様書
====================

このドキュメントでは、SpotLightアプリの各機能の詳細仕様について説明します。

## アプリ概要

### コンセプト
日常の中の小さな成果や才能を気軽に投稿・共有し、ユーザー同士で承認（いいね/コメント/バッジ）するSNS型アプリ

### ターゲットユーザー
- 才能や日常の工夫を共有したい個人ユーザー
- 共感や承認を得たいユーザー
- ゲーミフィケーション要素を楽しみたいユーザー

## 機能一覧

### 1. ユーザー認証機能

#### 1.1 ログイン機能
- **入力項目**:
  - メールアドレス
  - パスワード
- **バリデーション**:
  - メールアドレス形式チェック
  - パスワード長チェック（6文字以上）
- **エラーハンドリング**:
  - 認証失敗時のエラーメッセージ表示
  - ネットワークエラーの処理

#### 1.2 新規登録機能
- **入力項目**:
  - ニックネーム（必須）
  - メールアドレス（必須）
  - パスワード（必須）
  - パスワード確認（必須）
- **バリデーション**:
  - ニックネーム: 2文字以上
  - メールアドレス: 有効な形式
  - パスワード: 6文字以上
  - パスワード一致確認
- **初期設定**:
  - デフォルトプロフィール画像
  - 空の自己紹介文

#### 1.3 ログアウト機能
- **機能**: セッション終了
- **処理**: ローカルデータのクリア

### 2. プロフィール管理機能

#### 2.1 プロフィール表示
- **表示項目**:
  - プロフィール画像
  - ニックネーム
  - 自己紹介文
  - 投稿数
  - フォロワー数
  - フォロー数
  - 獲得バッジ一覧
- **レイアウト**: カード形式

#### 2.2 プロフィール編集
- **編集可能項目**:
  - プロフィール画像（画像選択）
  - ニックネーム
  - 自己紹介文
- **制限事項**:
  - ニックネーム: 最大20文字
  - 自己紹介文: 最大200文字

### 3. 投稿機能

#### 3.1 投稿作成
- **入力項目**:
  - テキスト内容（必須）
  - 画像（複数枚対応、最大5枚）
  - タグ（最大5個）
- **制限事項**:
  - テキスト: 最大500文字
  - 画像: JPEG/PNG形式、最大5MB/枚
- **プレビュー**: 投稿前の確認画面

#### 3.2 投稿表示
- **表示項目**:
  - ユーザー情報（アバター、ニックネーム）
  - 投稿内容（テキスト、画像）
  - タグ一覧
  - いいね数・コメント数
  - 投稿日時
- **レイアウト**: カード形式

#### 3.3 投稿編集・削除
- **編集機能**:
  - テキスト内容の変更
  - 画像の追加・削除
  - タグの変更
- **削除機能**:
  - 確認ダイアログ表示
  - 完全削除（コメント含む）

### 4. 承認・コミュニケーション機能

#### 4.1 いいね機能
- **操作**: 単一タップ
- **表示**: ハートアイコン + 数値
- **状態**: いいね済み/未いいねの視覚的区別
- **制限**: 1投稿につき1回のみ

#### 4.2 コメント機能
- **入力**: テキスト入力（最大200文字）
- **表示**: 時系列順（新しい順）
- **制限**: スパム防止のため連続投稿制限

#### 4.3 バッジ機能
- **自動付与**: 条件達成時に自動表示
- **条件例**:
  - 初投稿者: 初回投稿完了
  - 人気投稿者: いいね数100以上
  - コメント王: コメント数50以上
  - フォロワー王: フォロワー数100以上
- **表示**: プロフィールアイコン横に重ね表示

### 5. タイムライン機能

#### 5.1 フィード表示
- **ソート順**:
  - 新着順（デフォルト）
  - 人気順（いいね数）
- **表示形式**: 無限スクロール
- **更新**: プルトゥリフレッシュ対応

#### 5.2 フィルター機能
- **タグフィルター**: 特定タグの投稿のみ表示
- **ユーザーフィルター**: 特定ユーザーの投稿のみ表示
- **期間フィルター**: 投稿期間での絞り込み

### 6. 通知機能

#### 6.1 通知タイプ
- **いいね通知**: 投稿にいいねされた時
- **コメント通知**: 投稿にコメントされた時
- **バッジ通知**: 新しいバッジを獲得した時
- **フォロー通知**: フォローされた時

#### 6.2 通知表示
- **一覧表示**: 時系列順（新しい順）
- **未読管理**: 未読/既読の区別
- **一括既読**: 全通知を既読にする機能

### 7. 検索機能（将来実装）

#### 7.1 検索対象
- **投稿検索**: テキスト内容での検索
- **ユーザー検索**: ニックネームでの検索
- **タグ検索**: タグでの検索

#### 7.2 検索結果
- **投稿結果**: 該当投稿の一覧表示
- **ユーザー結果**: 該当ユーザーの一覧表示

## データ構造

### ユーザーデータ
```
User {
  id: String (ユニークID)
  nickname: String (ニックネーム)
  email: String (メールアドレス)
  profileImageUrl: String? (プロフィール画像URL)
  bio: String? (自己紹介)
  followersCount: int (フォロワー数)
  followingCount: int (フォロー数)
  postsCount: int (投稿数)
  badges: List<Badge> (獲得バッジ)
  createdAt: DateTime (作成日時)
}
```

### 投稿データ
```
Post {
  id: String (ユニークID)
  userId: String (投稿者ID)
  content: String (投稿内容)
  imageUrls: List<String> (画像URL一覧)
  tags: List<String> (タグ一覧)
  likesCount: int (いいね数)
  commentsCount: int (コメント数)
  likedBy: List<String> (いいねしたユーザーID一覧)
  createdAt: DateTime (作成日時)
  updatedAt: DateTime (更新日時)
}
```

### コメントデータ
```
Comment {
  id: String (ユニークID)
  postId: String (投稿ID)
  userId: String (コメント者ID)
  content: String (コメント内容)
  createdAt: DateTime (作成日時)
}
```

### 通知データ
```
Notification {
  id: String (ユニークID)
  type: NotificationType (通知タイプ)
  userId: String (対象ユーザーID)
  content: String (通知内容)
  postId: String? (関連投稿ID)
  badgeId: String? (関連バッジID)
  isRead: bool (既読フラグ)
  createdAt: DateTime (作成日時)
}
```

## UI/UX仕様

### デザイン原則
1. **シンプル**: 直感的で分かりやすいUI
2. **温かみ**: 親しみやすい色合いとデザイン
3. **レスポンシブ**: 様々な画面サイズに対応

### カラーパレット
- **プライマリ**: #FF6B35 (オレンジ)
- **セカンダリ**: #2C3E50 (ダークブルー)
- **アクセント**: #E74C3C (レッド)
- **背景**: #F8F9FA (ライトグレー)
- **テキスト**: #2C3E50 (ダークブルー)

### フォント
- **メインフォント**: Noto Sans JP
- **サイズ**: 12px, 14px, 16px, 18px, 20px, 24px

### アイコン
- **いいね**: ハートアイコン
- **コメント**: 吹き出しアイコン
- **投稿**: プラスアイコン
- **プロフィール**: 人物アイコン
- **通知**: ベルアイコン

## パフォーマンス要件

### レスポンス時間
- **画面遷移**: 300ms以内
- **API通信**: 2秒以内
- **画像読み込み**: 3秒以内

### メモリ使用量
- **基本動作**: 100MB以内
- **画像表示**: 200MB以内

### バッテリー消費
- **通常使用**: 1時間あたり5%以内
- **バックグラウンド**: 最小限

## セキュリティ要件

### データ保護
- **認証情報**: 暗号化して保存
- **通信**: HTTPS必須
- **入力検証**: サーバーサイドでの検証

### プライバシー
- **個人情報**: 最小限の収集
- **データ削除**: ユーザーによる完全削除可能
- **権限管理**: 必要な権限のみ要求

## 将来の拡張予定

### Phase 2
- 検索機能の実装
- フォロー機能の実装
- プライベート投稿機能

### Phase 3
- グループ機能
- イベント機能
- ライブ配信機能

### Phase 4
- AI機能（投稿推薦）
- 多言語対応
- ウェブ版の開発
